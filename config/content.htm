<h1>關於</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">國立虎尾科技大學機械設計工程系</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">國立台灣大學</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">機械設計工程系</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cp2024 電腦程式</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">課程教材：</span></span></p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">使用 Jupyter 學習 Python</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">（</span></span><a href="https://www.learnpythonwithjupyter.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">網站</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">、</span></span><a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">電子書</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">）</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">教育版帳號 microsoftonline 登錄點:  </span></span><a href="https://login.microsoftonline.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://login.microsoftonline.com/</span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">團隊線上教學：</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">以「學號@nfu.edu.tw」登入</span></span><a href="https://login.microsoftonline.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://login.microsoftonline.com/</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> Office 365</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Teams 團隊代碼：</span></span><span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">ldodwua</span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">個人以太坊：https://github.com/mdecp2024/hw-41323136</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">個人網站： <a class="Link--inTextBlock" href="https://mdecp2024.github.io/hw-41323136/">https://mdecp2024.github.io/hw-41323136/</a></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">其他資訊：</span></span></p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2023_pj3ag4_zmq_football_4.7.7z</span></span></a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</span></span></a></p>
<h1>出席率</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">出席人數 (10%) - 自行舉證評分</span></span></span></span></span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">自行利用Github提交提交記錄評分。</span></span></span></span></span></span></p>
<p></p>
<h1>硬體1</h1>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">主題：基於瀏覽器的分散式版本次管理與整合方案開發環境（10%）</span></span><span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">USB隨身碟：</span></span></p>
<p style="padding-left: 60px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">下載</span></span><a href="http://229.cycu.org/python_2025_lite.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">python_2025_lite.7z</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> (428 MB, 解開壓縮後約1.5 GB)</span></span></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">朱皮特</span></span></a></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">什麼是 Github 和 Codespace？</span></span></p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">你好世界 - GitHub 文檔</span></span></a></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">利用包含學號的字串作為帳號，申請免費使用Github。</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python 課程教材：</span></span><a href="https://www.learnpythonwithjupyter.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.learnpythonwithjupyter.com/</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - PART 1</span></span></p>
<hr/>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">第 1 部分：建立基礎知識資料整理 (10%)</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">啟動可攜程序系統後，在命令列中:</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">y:\&gt;cd 筆記本</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">y:\notebook&gt;jupyter lab --collaborative</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">進入</span></span><a href="/downloads/01_string_input_print.ipynb"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">01_string_input_print.ipynb</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">練習如何修改PART1筆記本後存檔，上傳至作業文檔中的下載目錄後，穿過</span></span><a href="https://nbviewer.org/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://nbviewer.org/</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">將已經提交的</span></span><a href="/downloads/01_string_input_print.ipynb"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">01_string_input_print.ipynb</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">，嵌入以下網頁中。</span></span></p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">上列 iframe 標註的 html 語法：</span></span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</span></span></pre>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">完成上述流程整理後，滿足HW1自評分數輸入cp2024自評表單中。</span></span></p>
<h4></h4>
<h2>硬體 1 考試</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">每六人為一組進行良好的程序練習</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">透過Jupyterlab良好的網頁，輪流指定各組編寫的主題1相關的程式練習，以及網頁內容（localhost與Codespaces環境）編輯。</span></span></p>
<h3>w10</h3>
<p><span>題目一</span><span>: </span></p>
<p><span>操作概要： 這部影片中使用了五種不同的方式去執行金字塔程式，模擬了在不同環境下去執行的方式與輸出的結果 心得： 在過程中我發現執行一個程式不是只有一種方法，各種模式有不同的優缺點，但是在用jupyter的過程我發現會報錯，應該是解壓縮不完全回去再試試看。</span></p>
<p><span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XQrLkvpgCoE?si=8AtdKQ96sq3pBsqW" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><span>題目二</span><span>: </span></p>
<ol aria-label=" 中的訊息" class="scrollerInner_e2e187" data-list-id="chat-messages" role="list" tabindex="0">
<li aria-setsize="-1" class="messageListItem_d5deea" id="chat-messages-1285627088040235140-1306606837864599625">
<div aria-labelledby="message-username-1306606775042048001 uid_1 message-content-1306606837864599625 uid_2 message-timestamp-1306606837864599625" aria-roledescription="傳送訊息" aria-setsize="-1" class="message_d5deea cozyMessage_d5deea wrapper_f9f2ca cozy_f9f2ca zalgo_f9f2ca" data-list-item-id="chat-messages___chat-messages-1285627088040235140-1306606837864599625" role="article" tabindex="-1">
<div class="contents_f9f2ca">
<div class="markup_f8f345 messageContent_f9f2ca" id="message-content-1306606837864599625"><span>１</span><span>.只能包含字母、數字和底線</span><em><span>：變數名稱只能包含a</span><span>-z、A</span><span>-Z、0</span><span>-9和</span></em><span>，不能包含空格或其他符號。</span><span> 大小寫敏感：Python是大小寫敏感的語言，myVariable並且myvariable是兩個不同的變數名稱。</span><span> 不得以數字開頭：變數中後可有數字，但不得做為開頭。</span><span> </span><span> </span><span>2</span><span>.避免使用Python關鍵字if：關鍵字（keywords）是Python語言保留的單詞，具有特殊意義，不能作為變數名稱。</span></div>
<div class="markup_f8f345 messageContent_f9f2ca"><span></span></div>
<div class="markup_f8f345 messageContent_f9f2ca"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Bdy8votyUaY?si=0wK6jHcfBomNubBw" title="YouTube video player" width="560"></iframe></div>
</div>
</div>
</li>
</ol>
<p></p>
<p><span>題目三</span><span>:</span></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/gfVa1oagunA?si=HHk2FJusH8idIVL2" title="YouTube video player" width="560"></iframe> </p>
<div id="tipue_search_content">
<p>以下方程式列印採用 <a href="https://www.mathjax.org/#gettingstarted">Mathjax Version 3 格式</a>.</p>
<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<h4>set1 - Physics</h4>
<p><span style="background-color: #ccffcc;">Use python to solve the problem: A jet touches down at velocity 310 km/h. Find the constant acceleration required to stop the aircraft 1000 m down the runway.</span></p>
<p style="padding-left: 30px;">To solve this problem, we'll use the kinematic equations of motion under constant acceleration. The question asks for the constant acceleration required to stop the jet after a certain distance, which means we are looking for the deceleration.</p>
<p style="padding-left: 30px;">Step 1: Problem Breakdown</p>
<p style="padding-left: 30px;">We are given:<br/>- Initial velocity \( v_0 = 310 \, \text{km/h} \)<br/>- Final velocity \( v = 0 \, \text{m/s} \) (since the jet stops)<br/>- Distance \( d = 1000 \, \text{m} \)</p>
<p style="padding-left: 30px;">We are asked to find the constant acceleration \( a \) that brings the jet to a stop.</p>
<p style="padding-left: 30px;">Step 2: Kinematic Equation</p>
<p style="padding-left: 30px;">The appropriate kinematic equation for this problem, where the object is decelerating (i.e., stopping), is:</p>
<p style="padding-left: 30px;">\[<br/>v^2 = v_0^2 + 2ad<br/>\]</p>
<p style="padding-left: 30px;">Where:<br/>- \( v \) is the final velocity (which is 0 since the jet stops),<br/>- \( v_0 \) is the initial velocity,<br/>- \( a \) is the constant acceleration (which we need to solve for),<br/>- \( d \) is the distance traveled.</p>
<p style="padding-left: 30px;">Step 3: Solving for Acceleration \( a \)</p>
<p style="padding-left: 30px;">Rearranging the equation to solve for \( a \):</p>
<p style="padding-left: 30px;">\[<br/>a = \frac{v^2 - v_0^2}{2d}<br/>\]</p>
<p style="padding-left: 30px;">Since \( v = 0 \), this simplifies to:</p>
<p style="padding-left: 30px;">\[<br/>a = \frac{-v_0^2}{2d}<br/>\]</p>
<p style="padding-left: 30px;">Step 4: Converting Units</p>
<p style="padding-left: 30px;">The velocity \( v_0 = 310 \, \text{km/h} \) needs to be converted to meters per second (m/s) because the distance is in meters and we want the acceleration in meters per second squared (m/s²).</p>
<p style="padding-left: 30px;">\[<br/>v_0 = 310 \, \text{km/h} = \frac{310 \times 1000}{3600} \, \text{m/s} = 86.11 \, \text{m/s}<br/>\]</p>
<p style="padding-left: 30px;">Step 5: Substituting Known Values</p>
<p style="padding-left: 30px;">Now we can substitute the values into the equation:</p>
<p style="padding-left: 30px;">\[<br/>a = \frac{-(86.11)^2}{2 \times 1000}<br/>\]</p>
<p style="padding-left: 30px;">Let's calculate this using Python.</p>
<p style="padding-left: 30px;">Python Code Implementation: <a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/d9558707c7e1765c1e6885ddc6919e32265c6d23/problem-set1-1_py.txt">problem-set1-1.py</a></p>
<p style="padding-left: 30px;"></p>
<p style="padding-left: 30px;">Use function to solve this kind of problem. <a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/9567804babcc2fa9edc32403d76dcf2af4955bcf/problem-set1-2_py.txt">problem-set1-2.py</a></p>
<p style="padding-left: 30px;">Extend to be more general to solve all kind of these problems. <a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/9567804babcc2fa9edc32403d76dcf2af4955bcf/problem-set1-3_py.txt">problem-set1-3.py</a></p>
<h4>set2- Calculus</h4>
<p><span style="background-color: #ccffcc;">Under ideal conditions a certain bacteria population is known to double every three hours. Suppose that there are initially 100 bacteria. When will the population first reach 50,000 ?</span></p>
<p style="padding-left: 30px;">We are asked to determine when a bacteria population, starting at 100 bacteria, will first reach 50,000, given that the population doubles every 3 hours.</p>
<p style="padding-left: 30px;">Exponential Growth Equation:</p>
<p style="padding-left: 30px;">The population growth can be modeled by the exponential growth formula:</p>
<p style="padding-left: 30px;">\[<br/>P(t) = P_0 \times 2^{\frac{t}{T}}<br/>\]</p>
<p style="padding-left: 30px;">Where:<br/>- \( P(t) \) is the population at time \( t \),<br/>- \( P_0 \) is the initial population,<br/>- \( T \) is the doubling time (in hours),<br/>- \( t \) is the time elapsed (in hours).</p>
<p style="padding-left: 30px;">Given:<br/>- \( P_0 = 100 \) (initial population),<br/>- \( T = 3 \) hours (doubling time),<br/>- \( P(t) = 50,000 \) (target population).</p>
<p style="padding-left: 30px;">Step 1: Plugging in the known values</p>
<p style="padding-left: 30px;">We want to find the time \( t \) when the population reaches 50,000. Substituting the known values into the growth equation:</p>
<p style="padding-left: 30px;">\[<br/>50,000 = 100 \times 2^{\frac{t}{3}}<br/>\]</p>
<p style="padding-left: 30px;">Step 2: Simplifying the equation</p>
<p style="padding-left: 30px;">First, divide both sides by 100 to isolate the exponential term:</p>
<p style="padding-left: 30px;">\[<br/>500 = 2^{\frac{t}{3}}<br/>\]</p>
<p style="padding-left: 30px;">Step 3: Solving for \( t \)</p>
<p style="padding-left: 30px;">To solve for \( t \), take the logarithm (base 2) of both sides of the equation:</p>
<p style="padding-left: 30px;">\[<br/>\log_2(500) = \frac{t}{3}<br/>\]</p>
<p style="padding-left: 30px;">Now, multiply both sides by 3 to solve for \( t \):</p>
<p style="padding-left: 30px;">\[<br/>t = 3 \times \log_2(500)<br/>\]</p>
<p style="padding-left: 30px;">Step 4: Change of Base Formula</p>
<p style="padding-left: 30px;">To compute \( \log_2(500) \) in Python or any other programming language, we can use the change of base formula:</p>
<p style="padding-left: 30px;">\[<br/>\log_2(x) = \frac{\log_{10}(x)}{\log_{10}(2)}<br/>\]</p>
<p style="padding-left: 30px;">Thus, the equation for \( t \) becomes:</p>
<p style="padding-left: 30px;">\[<br/>t = 3 \times \frac{\log_{10}(500)}{\log_{10}(2)}<br/>\]</p>
<p style="padding-left: 30px;">Python Code to Calculate \( t \): <a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/d9558707c7e1765c1e6885ddc6919e32265c6d23/problem-set2-1_py.txt">problem-set2-1.py</a></p>
<p></p>
</div>
<h2>w7</h2>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/JRmUtjr8e6o?si=czDDcnjbHVTPuvwf" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/yqJFAW-lpnI?si=YyvieJU6me7rLAqE" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/NMe0zS9vFXI?si=8G1JwuocDg-X8P3e" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<h2>w11_hw</h2>
<p></p>
<p>1.  已知可以用 Python 程式<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/c2225ac22f32ee8485a630b42cf3f4d8567bb661/up_to_down_pyramid.py">由上往下列印三角形 *</a>, 或<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/56793c72d4495d564e3cc6214ed5fb68dbd2b21d/left_to_right_pyramid.py">由左往右列印三角形 *</a>, 請將此程式延伸到可以在 10x10 的字元區域中, 以 "*" 字元列印出圓型區域. 完成後請將程式碼存入個人 Gist 後, 直接在個人作業網站中的 Brython 頁面中執行. (提示: ?src=gist_script_URL)</p>
<p><span>解: <a href="https://mdecp2024.github.io/hw-41323136/content/%E5%B8%83%E8%90%8A%E9%A0%93.html?src=https://gist.githubusercontent.com/41323136/37f83ddb03089f732da5a2b70ef0e539/raw/be4ba6859a4b38ea15aca3706915da3869683726/hw1.py">"*" 字元</a></span></p>
<p></p>
<p>2. 已知可以在網頁中利用 Brython 繪製方格與塗色, 如下連結, 請設法修改此一程式, 直接將程式存入個人的 Gist, 並利用黑色方塊圍出一個圓形區域.</p>
<p><a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/f95909804a1f134963cade8463eeb9bd32129ea8/grid_line_and_fill_in_Brython.py">網頁上的方格與塗色</a></p>
<p><span>解:<a href="https://mdecp2024.github.io/hw-41323136/content/%E5%B8%83%E8%90%8A%E9%A0%93.html?src=https://gist.githubusercontent.com/41323136/c90a09c3fb07b0c2462f7fea80d271a1/raw/6884f4b46c2bb43ffebce0fb1f9824e3e3c6a69a/hw2.py">請設法修改此一程式</a></span></p>
<p><span></span></p>
<p>3. 完成上列題目後, 請利用 Youtube 影片<span>簡報</span>個人的解題過程與心得.</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/_TvhSMU_m9E?si=zgy6SLjszn4fYPsI" title="YouTube video player" width="560"></iframe></p><h2>w12_hw</h2><h2>w13_hw</h2>
<p><a href="https://mdecp2024.github.io/hw--ffwfggw/content/Brython.html?src=https://gist.githubusercontent.com/ffwfggw/adab16fe07d69aac80511ec476fb3c84/raw/61ff883b61b13e511e99830d6ec8bfa51ac2a986/1.py">上課題目</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html #導入html函式庫
from browser import document as doc #導入document程式庫並在程式中命名(簡寫)為doc

# 利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width = 400,height = 400) #將變數canvas指定為html.CANVAS(width = 400,height = 400) 
#意思是建立*(準備)一個400*400的空間(畫布)
brython_div = doc["brython_div1"] #將變數brython_div指定為doc["brython_div1"]
brython_div &lt;= canvas #將canve指定為子元素加入倒brython_div中

# 每一格的 pixel 數
gs = 200 

# gs*tc = canvas width and height

ctx = canvas.getContext("2d") #將ctx指定(簡寫)為canvas.getContext("2d") (獲取畫布（canvas）的 2D 繪圖上下文 (context))
width=1 #方形的寬
height=1 #方形的高

#第一個方形
for i in range(width): 
    for j in range(height):
     #dRect(i*gs, j*gs, gs, gs, 1, "lightgrey")
     ctx.lineWidth=1
     ctx.strokeStyle='red'
     ctx.beginPath();
     ctx.rect(i*gs,j*gs,gs,gs)
     ctx.stroke();
     
#第二個偏移的方形
for i in range(width): 
    for j in range(height):
     #dRect(i*gs, j*gs, gs, gs, 1, "lightgrey")
     ctx.lineWidth=1
     ctx.strokeStyle='red'
     ctx.beginPath();
     ctx.rect(i*gs+100,j*gs+100,gs,gs)      #gs+100代表往右下偏移100像素
     ctx.stroke();
</pre>
<p>w13 作業:</p>
<p>請在下列圖形中的兩個正方形外圍, 以黑色畫筆畫圓, 並設法在各線條所圍成的封閉區域塗上不同顏色. 操作過程請拍攝影片, 並在頁面中列出作業心得.</p>
<p><a href="https://mdecp2024.github.io/hw-ffwfggw/content/Brython.html?src=https://gist.githubusercontent.com/ffwfggw/d4108f2658da04e5a45cffd98273afcb/raw/5f138b460793491c17fd9ab0689d22408d814096/1.py">解</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width=400, height=400)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

ctx = canvas.getContext("2d")
ctx.lineWidth = 1  # 設定邊框線寬

# 繪製對角線，顏色設定為藍色
ctx.strokeStyle = 'blue'  # 設定對角線顏色為藍色
ctx.beginPath()
ctx.moveTo(20, 20)  # 調整起點位置
ctx.lineTo(100, 100)  # 終點設為大正方形的右下角
ctx.stroke()

# 繪製外接圓，圓心位於第一個矩形的中央
center_x1 = 20 + 80 / 2  # 第一個矩形的X中心
center_y1 = 20 + 80 / 2  # 第一個矩形的Y中心

# 半徑為第一個矩形對角線的一半
radius1 = (80 * (2 ** 0.5)) / 2

# 繪製外接圓
ctx.strokeStyle = 'green'  # 設定圓的顏色為綠色
ctx.beginPath()
ctx.arc(center_x1, center_y1, radius1, 0, 2 * 3.14159)  # 圓心 (center_x1, center_y1) 和半徑
ctx.stroke()

# 繪製外接圓，圓心位於第二個矩形的中央
center_x2 = 60 + 80 / 2  # 第二個矩形的X中心
center_y2 = 60 + 80 / 2  # 第二個矩形的Y中心

# 半徑為第二個矩形對角線的一半
radius2 = (80 * (2 ** 0.5)) / 2

# 繪製外接圓
ctx.strokeStyle = 'purple'  # 設定圓的顏色為紫色
ctx.beginPath()
ctx.arc(center_x2, center_y2, radius2, 0, 2 * 3.14159)  # 圓心 (center_x2, center_y2) 和半徑
ctx.stroke()

# 繪製第一個矩形，並填充顏色
ctx.fillStyle = 'yellow'  # 設定填充顏色為黃色
ctx.strokeStyle = 'red'   # 設定邊框顏色為紅色

ctx.rect(20, 20, 80, 80)  # 設定矩形的位置和大小，縮小為 80x80
ctx.stroke()  # 繪製邊框
ctx.beginPath()

# 繪製第二個矩形
ctx.strokeStyle = 'red'    # 設定邊框顏色為紅色
ctx.beginPath()
ctx.rect(60, 60, 80, 80)  # 設定第二個矩形的位置和大小，縮小為 60x60
ctx.stroke()  # 繪製邊框

# 填充圓形的區域，排除與正方形的重疊部分
ctx.globalCompositeOperation = 'source-over'  # 設定為填充模式
ctx.fillStyle = 'lightblue'  # 設定圓形內部填充顏色為淺藍色

# 填充第一個圓形
ctx.beginPath()
ctx.arc(center_x1, center_y1, radius1, 0, 2 * 3.14159)
ctx.fill()

# 填充第二個圓形
ctx.beginPath()
ctx.arc(center_x2, center_y2, radius2, 0, 2 * 3.14159)
ctx.fill()

# 刪除圓形與正方形重疊的區域
ctx.globalCompositeOperation = 'destination-out'  # 設定為刪除重疊區域模式

# 刪除第一個圓與正方形重疊的區域
ctx.beginPath()
ctx.rect(20, 20, 80, 80)  # 第一個矩形區域
ctx.fill()

# 刪除第二個圓與正方形重疊的區域
ctx.beginPath()
ctx.rect(60, 60, 80, 80)  # 第二個矩形區域
ctx.fill()

# 填充重疊區域的顏色（位於兩個正方形重疊的區域）
ctx.globalCompositeOperation = 'source-over'  # 恢復填充模式
ctx.fillStyle = 'orange'  # 設定重疊區域填充顏色為橙色

# 填充第一個矩形的內部
ctx.globalCompositeOperation = 'source-over'  # 設定為填充模式
ctx.fillStyle = 'lightyellow'  # 設定填充顏色
ctx.beginPath()
ctx.rect(20, 20, 80, 80)  # 第一個矩形區域
ctx.fill()

# 填充第二個矩形的內部
ctx.fillStyle = 'orange'  # 設定填充顏色
ctx.beginPath()
ctx.rect(60, 60, 80, 80)  # 第二個矩形區域
ctx.fill()

# 填充第一個圓形和矩形之間的空白區域
ctx.fillStyle = 'lightblue'  # 設定填充顏色
ctx.beginPath()
ctx.arc(center_x1, center_y1, radius1, 0, 2 * 3.14159)
ctx.rect(20, 20, 80, 80)  # 使用複合模式
ctx.globalCompositeOperation = 'destination-over'  # 填充背景模式
ctx.fill()

# 填充第二個圓形和矩形之間的空白區域
ctx.fillStyle = 'pink'  # 設定填充顏色
ctx.beginPath()
ctx.arc(center_x2, center_y2, radius2, 0, 2 * 3.14159)
ctx.rect(60, 60, 80, 80)  # 使用複合模式
ctx.globalCompositeOperation = 'destination-over'
ctx.fill()

# 重置繪圖操作模式
ctx.globalCompositeOperation = 'source-over'

# 重疊區域填充
ctx.beginPath()
ctx.rect(60, 60, 40, 40)  # 重疊區域的範圍 (兩個矩形重疊部分)
ctx.fill()

# 重新繪製斜線，確保它在最上層
ctx.strokeStyle = 'blue'  # 設定斜線顏色為藍色
ctx.beginPath()
ctx.moveTo(20, 20)
ctx.lineTo(100, 100)  # 斜線終點設為大正方形的右下角
ctx.stroke()

# 最後繪製所有的邊框，確保線條不被遮蓋
ctx.strokeStyle = 'red'   # 第一個矩形的邊框顏色
ctx.beginPath()
ctx.rect(20, 20, 80, 80)  # 第一個矩形的位置和大小
ctx.stroke()

ctx.strokeStyle = 'red'  # 第二個矩形的邊框顏色
ctx.beginPath()
ctx.rect(60, 60, 80, 80)  # 第二個矩形的位置和大小
ctx.stroke()

ctx.strokeStyle = 'black'  # 圓形邊框顏色
ctx.beginPath()
ctx.arc(center_x1, center_y1, radius1, 0, 2 * 3.14159)  # 第一個圓
ctx.stroke()

ctx.beginPath()
ctx.arc(center_x2, center_y2, radius2, 0, 2 * 3.14159)  # 第二個圓
ctx.stroke()</pre>
<p><br/><br/></p>
<p></p><h2>w14_ex</h2>
<p><span>請根據兩個圓繪圖所圍成的</span><a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5eca62565d509668d731720f1994e127/raw/0e370b2ad0c429ab4c8905244022c27cfca8cfba/two_cicle_fill_ex1.py">區域</a><span>(目前圍成三個區域, 但若圓心移動可能彼此獨立)進行不同顏色著色, 條件是當各圓半徑與圓心座標變動時, 程式只需輸入兩個圓的圓心座標與半徑, 就可以完成各區域的著色任務.</span></p>
<p><a href="/get_page/%E5%B8%83%E8%90%8A%E9%A0%93?src=https://gist.githubusercontent.com/41323136/04fa06bbb823808ddffaead6b0e8581c/raw/e64f82c4a8acbd1944b943585db708cc3e9bc935/w14.py">三個圓的區域塗色</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc
import random
import math

# 定義一個函式來初始化畫布
def initialize_canvas(canvas_width=400, canvas_height=400, id="brython_div1"):
    """
    初始化畫布，創建一個指定大小的 Canvas 元素，並將其加到 HTML 文件中。
    返回畫布元素和它的 2D 繪圖上下文。
    """
    # 創建一個 canvas 元素，並設置其寬度與高度
    canvas = html.CANVAS(width=canvas_width, height=canvas_height)
    # 將創建的 canvas 元素添加到指定的 HTML div 元素中
    brython_div = doc[id]  # 獲取指定 id 的 div 元素
    brython_div &lt;= canvas  # 將 canvas 插入到該 div 中
     
    # 獲取 canvas 的 2D 繪圖上下文，這是進行繪圖的主要接口
    ctx = canvas.getContext("2d")
     
    # 返回畫布和它的 2D 繪圖上下文
    return canvas, ctx

# 定義一個隨機顏色生成函式
def random_color_generator():
    """
    生成一個隨機的 RGB 顏色字符串。
    返回的顏色是 "rgb(r, g, b)" 格式，其中 r, g, b 是 0 到 255 之間的隨機整數。
    """
    r = random.randint(0, 255)  # 隨機生成紅色成分 (0-255)
    g = random.randint(0, 255)  # 隨機生成綠色成分 (0-255)
    b = random.randint(0, 255)  # 隨機生成藍色成分 (0-255)
    return f"rgb({r}, {g}, {b})"  # 返回隨機顏色字符串

# 判斷點 (px, py) 是否在圓內
def is_point_in_circle(px, py, cx, cy, r):
    """
    判斷一個點 (px, py) 是否位於圓 (cx, cy, r) 內。
    (cx, cy) 為圓心坐標，r 為圓的半徑。
    """
    # 使用圓的方程 (px - cx)² + (py - cy)² &lt;= r² 判斷點是否在圓內
    return (px - cx) ** 2 + (py - cy) ** 2 &lt;= r ** 2

# 使用者設定的三個圓心座標和半徑，並進行掃描線填充
def draw_circles(x1, y1, r1, x2, y2, r2, x3, y3, r3):
    """
    根據傳入的三個圓的圓心和半徑，繪製圓形並使用掃描線算法填充區域。
    x1, y1, r1 是圓1的圓心坐標和半徑
    x2, y2, r2 是圓2的圓心坐標和半徑
    x3, y3, r3 是圓3的圓心坐標和半徑
    """
    # 初始化畫布，創建並取得畫布和其 2D 上下文
    canvas, ctx = initialize_canvas(400, 400)
     
    # 清空畫布，以便重新繪製
    ctx.clearRect(0, 0, canvas.width, canvas.height)
     
    # 顏色區域存儲字典，存儲不同區域的顏色
    color_dict = {}

    # 使用掃描線方法填充區域，逐行掃描畫布上的每個像素
    for py in range(0, canvas.height):  # 遍歷每一行的 y 坐標
        # 當前掃描線的顏色初始化為 None，後面會根據位置選擇顏色
        current_color = None
         
        # 遍歷當前行中的每個像素點 (px, py)
        for px in range(0, canvas.width):  # 遍歷每一列的 x 坐標
            # 判斷該點是否在圓1內
            in_circle1 = is_point_in_circle(px, py, x1, y1, r1)
            # 判斷該點是否在圓2內
            in_circle2 = is_point_in_circle(px, py, x2, y2, r2)
            # 判斷該點是否在圓3內
            in_circle3 = is_point_in_circle(px, py, x3, y3, r3)
             
            # 檢查該點在不同圓區域的情況，並進行顏色分配
            if in_circle1 and in_circle2 and in_circle3:
                # 如果點同時在三個圓內，則是交集區域
                if "intersection" not in color_dict:
                    color_dict["intersection"] = random_color_generator()
                current_color = color_dict["intersection"]
            elif in_circle1 and in_circle2:
                # 如果點在圓1和圓2內，但不在圓3內
                if "circle1_and_circle2" not in color_dict:
                    color_dict["circle1_and_circle2"] = random_color_generator()
                current_color = color_dict["circle1_and_circle2"]
            elif in_circle2 and in_circle3:
                # 如果點在圓2和圓3內，但不在圓1內
                if "circle2_and_circle3" not in color_dict:
                    color_dict["circle2_and_circle3"] = random_color_generator()
                current_color = color_dict["circle2_and_circle3"]
            elif in_circle1 and in_circle3:
                # 如果點在圓1和圓3內，但不在圓2內
                if "circle1_and_circle3" not in color_dict:
                    color_dict["circle1_and_circle3"] = random_color_generator()
                current_color = color_dict["circle1_and_circle3"]
            elif in_circle1:
                # 如果點只在圓1內
                if "circle1" not in color_dict:
                    color_dict["circle1"] = random_color_generator()
                current_color = color_dict["circle1"]
            elif in_circle2:
                # 如果點只在圓2內
                if "circle2" not in color_dict:
                    color_dict["circle2"] = random_color_generator()
                current_color = color_dict["circle2"]
            elif in_circle3:
                # 如果點只在圓3內
                if "circle3" not in color_dict:
                    color_dict["circle3"] = random_color_generator()
                current_color = color_dict["circle3"]
            else:
                # 如果點不在任何圓內，則是背景區域
                current_color = "white"  # 背景色設為白色
     
            # 設置當前像素的顏色並進行填充
            ctx.fillStyle = current_color
            ctx.fillRect(px, py, 1, 1)  # 填充當前像素 (px, py)

# 直接設定三個圓心和半徑
x1, y1, r1 = 150, 200, 100  # 圓1：圓心 (150, 200)，半徑 100
x2, y2, r2 = 250, 200, 100  # 圓2：圓心 (250, 200)，半徑 100
x3, y3, r3 = 200, 150, 100  # 圓3：圓心 (200, 150)，半徑 100

# 呼叫畫圓函式，並繪製三個圓
draw_circles(x1, y1, r1, x2, y2, r2, x3, y3, r3)
</pre>
<p></p><h2>w15</h2>
<p><span>題目一: 請利用 Gist 與 Brython 程式環境, 在個人的課程網站中新增一個頁面, 標題為 w15, 以"從 1 累加到 100"作為 anchor 的連結標題, 使用者點擊該連結之後, 可從各自的 Brython 頁面執行程式.</span></p>
<p><a href="https://mdecp2024.github.io/hw-41323136/content/%E5%B8%83%E8%90%8A%E9%A0%93.html?src=https://gist.githubusercontent.com/ffwfggw/ae02f83a1ccfe1922422a57a40bec8e2/raw/62ffb81d5aeb737e7aa75324f760903d902fb3c5/1.py">從 1 累加到 100</a></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_824009">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 用來計算從 1 累加到 100 的總和</code></div>
<div class="line number2 index1 alt1"><code class="py plain">total </code><code class="py keyword">=</code> <code class="py functions">sum</code><code class="py plain">(</code><code class="py functions">range</code><code class="py plain">(</code><code class="py value">1</code><code class="py plain">, </code><code class="py value">101</code><code class="py plain">))</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="py comments"># 顯示結果</code></div>
<div class="line number5 index4 alt2"><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"從 1 累加到 100 的總和是:"</code><code class="py plain">, total)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p><a href="https://mdecp2024.github.io/hw-ffwfggw/content/Brython.html?src=https://gist.githubusercontent.com/ffwfggw/ae02f83a1ccfe1922422a57a40bec8e2/raw/b39c0b2e41e5a91ecfaddef9eb6995101185c65d/2.py">範例</a></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_9181">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 定義 addto 函數來進行累加</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">def</code> <code class="py plain">addto(start, end):</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py functions">sum</code><code class="py plain">(</code><code class="py functions">range</code><code class="py plain">(start, end </code><code class="py keyword">+</code> <code class="py value">1</code><code class="py plain">))</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="py comments"># 使用 addto 函數計算從 1 累加到 100 的總和</code></div>
<div class="line number6 index5 alt1"><code class="py plain">total </code><code class="py keyword">=</code> <code class="py plain">addto(</code><code class="py value">1</code><code class="py plain">, </code><code class="py value">100</code><code class="py plain">)</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="py comments"># 顯示結果</code></div>
<div class="line number9 index8 alt2"><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"從 1 累加到 100 的總和是:"</code><code class="py plain">, total)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div><h1>硬質合金2</h1>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">主題：Python的數列、判斷式與重複迴圈 (20%)</span></span><span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python 課程教材：</span></span><a href="https://www.learnpythonwithjupyter.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://www.learnpythonwithjupyter.com/</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - PART 2 與 Part 3</span></span></p>
<hr/>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">馬尼拉HW 1網頁資料整理與程序練習方法，整理以下（20%）：</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">第 2 部分：列表和 if/else 語句簡介</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">第 3 部分：for 迴圈簡介</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">完成上述流程整理後，滿足HW2自評分數輸入cp2024自評表單中。</span></span></p><h2>硬體 2 考試</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">每六人為一組進行良好的程序練習</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">透過 Jupyterlab 良好的網頁，輪流指定各組編寫的 HW 2 相關的程式練習，以及網頁內容（localhost 與 Codespaces 環境）編輯</span></span></p>
<h3>w16_exam1</h3><h1>硬質合金3</h1>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">主題：Python 的數字、算法與迴圈 (20%)</span></span></h4>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python 課程教材： https: </span></span><a href="https://www.learnpythonwithjupyter.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">//www.learnpythonwithjupyter.com/</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> - PART 4 與 Part 5</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">完成上述流程整理後，滿足HW3自評分數輸入cp2024自評表單中。</span></span></p>
<h2>硬體 3 考試</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">每六人為一組進行良好的程序練習</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">透過 Jupyterlab 良好的網頁，輪流指定各組編寫的 HW 3 相關的程式練習，以及網頁內容（localhost 與 Codespaces 環境）編輯。</span></span></p>
<h1>硬質合金4</h1>
<h4><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">主題：利用Python控制機電模擬系統（20%）</span></span></h4>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">利用 </span></span><a href="https://solvespace.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://solvespace.com/</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> 建立機械系統零組件</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">利用</span></span><a href="https://www.coppeliarobotics.com/"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">CoppeliaSim</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">建立機電模擬系統</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">利用</span></span><a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Python</span></span></a><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跨網路控制瀏覽器上的機電類比系統</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">範例：</span></span></p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2023_pj3ag4_zmq_football_4.7.7z</span></span></a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">完成上述流程整理後，滿足HW4自評分數輸入cp2024自評表單中。</span></span></p>
<h2>硬體 4 考試</h2>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">每六人為一組進行良好的程序練習</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">透過 Jupyterlab 良好的網頁，輪流指定各組編寫的 HW 4 相關的程式練習，以及網頁內容（localhost 與 Codespaces 環境）編輯。</span></span></p>
<h1>最終報告</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">期末口腔與書面專題報告 (20%)</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">期末口腔專題報告影片：</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.....</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">期末書面專題報告檔案（pdf）：</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.....</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">電腦輔助設計與實習課程總結心得：</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.....</span></span></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">期末自報告評成績：</span></span></p>
<p style="padding-left: 30px;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">完成上述流程後，接受最終報告自評分數輸入cp2024自評表單中。</span></span></p>
<h1>布萊頓</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100：</span></span></p>
<p><button id="add1to100"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1 加到 100</span></span></button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">檔案名稱：</span></span><input id="kw_filename" placeholder="輸入檔名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="保存"/></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></button> <button id="kw_show_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></button> <button id="kw_clear_console1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></button><button id="clear_bd1"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">從1累加到100第2部分：</span></span></p>
<p><button id="add1to100part2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">1 加到 100</span></span></button><button id="cango_three_gears"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">cango_三_齒輪</span></span></button><button id="bsnake"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">BS蛇</span></span></button><button id="aitetris"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">人工智慧俄羅斯方塊</span></span></button><button id="threejsblock"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">旋轉塊</span></span></button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">檔案名稱：</span></span><input id="kw_filename2" placeholder="輸入檔名" type="text"/><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">.py</span></span></label> <span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="保存"/></span></span></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">跑步</span></span></button> <button id="kw_show_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">輸出</span></span></button> <button id="kw_clear_console2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">明確輸出區</span></span></button><button id="clear_bd2"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">清晰的繪圖區</span></span></button><button onclick="window.location.reload()"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">重新載入</span></span></button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">ㄆˇ</span></span></p>